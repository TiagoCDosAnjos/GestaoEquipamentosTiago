<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="menuStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="buttonEquipamentos.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AElFTkSuQmCC
</value>
  </data>
</root>